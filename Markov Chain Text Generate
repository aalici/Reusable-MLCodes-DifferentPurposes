# -*- coding: utf-8 -*-
"""
Just for creating Markov Series

"""

#Import libraries.
import sys
import random
import re ##for regexp
 
 
def readdata(file):
    '''Read file and return contents.'''
    with open(file) as f:
        contents = f.read()
    return contents
 
 
def makerule(data, context):
    '''Make a rule dict for given data.'''
    rule = {}
    words = data.split(' ')
    index = context
 
    for word in words[index:]:
        key = ' '.join(words[index-context:index])
        if key in rule:
            rule[key].append(word)
        else:
            rule[key] = [word]
        index += 1
 
    return rule
 
 
def makestring(rule, length, v_start_part = ''):
        
    '''Use a given rule to make a string.'''
    start_part = '' 
    if len(v_start_part) == 0:
        print("111")
        start_part= random.choice(list(rule.keys()))
    elif  v_start_part in [ x for x in list( rule.keys())] :
        print("222")
        start_part= v_start_part
    else:
        print("Your stated start_part is not in list of model! Try again with new one!!")
        return ''
    
    print("333")
    oldwords = start_part.split(' ') #random starting words
    string = ' '.join(oldwords) + ' '
    
    print("333")
    
    print(string)
 
    for i in range(length):
        try:
            key = ' '.join(oldwords)
            newword = random.choice(rule[key])
            string += newword + ' '
 
            for word in range(len(oldwords)):
                oldwords[word] = oldwords[(word + 1) % len(oldwords)]
            oldwords[-1] = newword
 
        except KeyError:
            return string
    return string


##GET DATA    
data = readdata("iheb.txt")

 
##DATA PREPROCESSING
translation = str.maketrans('ĞÜŞİÖÇğüşıöç' , 'GUSIOCgusioc')
data = data.translate(translation).upper()
   
data = data.replace('\n',' ')
data = data.replace('  ',' ')
data = data.replace('"','')
data = data.replace('MADDE','')
data = re.sub(r"[,.;:@#?!&$]+\ *", " ", data)
data = re.sub(r"[0123456789]", "", data)                     



##MAKE RULE
rule = makerule(data, 2) 


##GENERATE NEW TEXT - OUTPUT
string = makestring(rule, 100)
string = makestring(rule, 100, 'topluluğun kültürel')
